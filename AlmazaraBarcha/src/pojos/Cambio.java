package pojos;
// Generated 06-oct-2016 10:48:58 by Hibernate Tools 4.3.1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Cambio generated by hbm2java
 */
@Entity
@Table(name = "cambio", catalog = "almazaradb"
)
public class Cambio implements java.io.Serializable {

    private static final float RENTABILIDAD_CAMBIO = (float) 0.01;           //Lo mismo que dividir entre 100
    private static final float RENDIMIENTO_MULTURACION_ECONOMICO = (float) 0.15;    //€
    private static final float RENDIMIENTO_MAQUILA_KG = (float) 0.04;
    private static final float CONVERSOR = (float) 0.92;

    private Integer idCambio;
    private Proveedor proveedor;
    private Usuario usuario;
    private float kgOliva;
    private boolean paga;
    private boolean retira;
    private float rendimiento;
    private float litrosAceiteCambio;
    private Float kgAceiteCambio;
    private float litrosAceiteRetirados;
    private Float kgAceiteRetirados;
    private float porcentajeMaquila;
    private float maquila;
    private float precioMolturacion;
    private float totalPagar;
    private float maquilaReflejada;
    private float kgOlivaReflejados;
    private String poblacionOliva;
    private String observaciones;
    private Date fecha;
    private boolean declara;

    public Cambio() {
    }

    public Cambio(Proveedor proveedor, Usuario usuario, float kgOliva, boolean paga, boolean retira, float rendimiento, float litrosAceiteCambio, float litrosAceiteRetirados, float porcentajeMaquila, float maquila, float precioMolturacion, float totalPagar, float maquilaReflejada, float kgOlivaReflejados, Date fecha, boolean declara) {
        this.proveedor = proveedor;
        this.usuario = usuario;
        this.kgOliva = kgOliva;
        this.paga = paga;
        this.retira = retira;
        this.rendimiento = rendimiento;
        this.litrosAceiteCambio = litrosAceiteCambio;
        this.litrosAceiteRetirados = litrosAceiteRetirados;
        this.porcentajeMaquila = porcentajeMaquila;
        this.maquila = maquila;
        this.precioMolturacion = precioMolturacion;
        this.totalPagar = totalPagar;
        this.maquilaReflejada = maquilaReflejada;
        this.kgOlivaReflejados = kgOlivaReflejados;
        this.fecha = fecha;
        this.declara = declara;
    }

    public Cambio(Proveedor proveedor, Usuario usuario, float kgOliva, boolean paga, boolean retira, float rendimiento, float litrosAceiteCambio, Float kgAceiteCambio, float litrosAceiteRetirados, Float kgAceiteRetirados, float porcentajeMaquila, float maquila, float precioMolturacion, float totalPagar, float maquilaReflejada, float kgOlivaReflejados, String poblacionOliva, String observaciones, Date fecha, boolean declara) {
        this.proveedor = proveedor;
        this.usuario = usuario;
        this.kgOliva = kgOliva;
        this.paga = paga;
        this.retira = retira;
        this.rendimiento = rendimiento;
        this.litrosAceiteCambio = litrosAceiteCambio;
        this.kgAceiteCambio = kgAceiteCambio;
        this.litrosAceiteRetirados = litrosAceiteRetirados;
        this.kgAceiteRetirados = kgAceiteRetirados;
        this.porcentajeMaquila = porcentajeMaquila;
        this.maquila = maquila;
        this.precioMolturacion = precioMolturacion;
        this.totalPagar = totalPagar;
        this.maquilaReflejada = maquilaReflejada;
        this.kgOlivaReflejados = kgOlivaReflejados;
        this.poblacionOliva = poblacionOliva;
        this.observaciones = observaciones;
        this.fecha = fecha;
        this.declara = declara;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "idCambio", unique = true, nullable = false)
    public Integer getIdCambio() {
        return this.idCambio;
    }

    public void setIdCambio(Integer idCambio) {
        this.idCambio = idCambio;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Proveedor_idProveedor", nullable = false)
    public Proveedor getProveedor() {
        return this.proveedor;
    }

    public void setProveedor(Proveedor proveedor) {
        this.proveedor = proveedor;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Usuario_idUsuario", nullable = false)
    public Usuario getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @Column(name = "kgOliva", nullable = false, precision = 12, scale = 0)
    public float getKgOliva() {
        return this.kgOliva;
    }

    public void setKgOliva(float kgOliva) {
        this.kgOliva = kgOliva;
    }

    @Column(name = "paga", nullable = false)
    public boolean isPaga() {
        return this.paga;
    }

    public void setPaga(boolean paga) {
        this.paga = paga;
    }

    @Column(name = "retira", nullable = false)
    public boolean isRetira() {
        return this.retira;
    }

    public void setRetira(boolean retira) {
        this.retira = retira;
    }

    @Column(name = "rendimiento", nullable = false, precision = 12, scale = 0)
    public float getRendimiento() {
        return this.rendimiento;
    }

    public void setRendimiento(float rendimiento) {
        this.rendimiento = rendimiento;
    }

    @Column(name = "litrosAceiteCambio", nullable = false, precision = 12, scale = 0)
    public float getLitrosAceiteCambio() {
        return this.litrosAceiteCambio;
    }

    public void setLitrosAceiteCambio(float litrosAceiteCambio) {
        this.litrosAceiteCambio = litrosAceiteCambio;
    }

    @Column(name = "kgAceiteCambio", precision = 12, scale = 0)
    public Float getKgAceiteCambio() {
        return this.kgAceiteCambio;
    }

    public void setKgAceiteCambio(Float kgAceiteCambio) {
        this.kgAceiteCambio = kgAceiteCambio * CONVERSOR;
    }

    @Column(name = "litrosAceiteRetirados", nullable = false, precision = 12, scale = 0)
    public float getLitrosAceiteRetirados() {
        return this.litrosAceiteRetirados;
    }

    public void setLitrosAceiteRetirados(float litrosAceiteRetirados) {
        this.litrosAceiteRetirados = litrosAceiteRetirados;
    }

    @Column(name = "kgAceiteRetirados", precision = 12, scale = 0)
    public Float getKgAceiteRetirados() {
        return this.kgAceiteRetirados;
    }

    public void setKgAceiteRetirados(Float kgAceiteRetirados) {
        this.kgAceiteRetirados = kgAceiteRetirados * CONVERSOR;
    }

    @Column(name = "porcentajeMaquila", nullable = false, precision = 12, scale = 0)
    public float getPorcentajeMaquila() {
        return this.porcentajeMaquila;
    }

    public void setPorcentajeMaquila(float porcentajeMaquila) {
        this.porcentajeMaquila = porcentajeMaquila;
    }

    @Column(name = "maquila", nullable = false, precision = 12, scale = 0)
    public float getMaquila() {
        return this.maquila;
    }

    public void setMaquila(float maquila) {
        this.maquila = maquila;
    }

    @Column(name = "precioMolturacion", nullable = false, precision = 12, scale = 0)
    public float getPrecioMolturacion() {
        return this.precioMolturacion;
    }

    public void setPrecioMolturacion(float precioMolturacion) {
        this.precioMolturacion = precioMolturacion;
    }

    @Column(name = "totalPagar", nullable = false, precision = 12, scale = 0)
    public float getTotalPagar() {
        return this.totalPagar;
    }

    public void setTotalPagar(float totalPagar) {
        this.totalPagar = totalPagar;
    }

    @Column(name = "maquilaReflejada", nullable = false, precision = 12, scale = 0)
    public float getMaquilaReflejada() {
        return this.maquilaReflejada;
    }

    public void setMaquilaReflejada(float maquilaReflejada) {
        this.maquilaReflejada = maquilaReflejada;
    }

    @Column(name = "kgOlivaReflejados", nullable = false, precision = 12, scale = 0)
    public float getKgOlivaReflejados() {
        return this.kgOlivaReflejados;
    }

    public void setKgOlivaReflejados(float kgOlivaReflejados) {
        this.kgOlivaReflejados = kgOlivaReflejados;
    }

    @Column(name = "poblacionOliva", length = 30)
    public String getPoblacionOliva() {
        return this.poblacionOliva;
    }

    public void setPoblacionOliva(String poblacionOliva) {
        this.poblacionOliva = poblacionOliva;
    }

    @Column(name = "Observaciones", length = 100)
    public String getObservaciones() {
        return this.observaciones;
    }

    public void setObservaciones(String observaciones) {
        this.observaciones = observaciones;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fecha", nullable = false, length = 19)
    public Date getFecha() {
        return this.fecha;
    }

    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    @Column(name = "declara", nullable = false)
    public boolean isDeclara() {
        return this.declara;
    }

    public void setDeclara(boolean declara) {
        this.declara = declara;
    }

    /**
     * ******************Cálculos**************************
     */
    /**
     * Los litros estimados para realizar el cambio
     *
     * @return litros para cambio
     */
    public float CalcularLitrosAceiteParaCambio() {
        return rendimiento * (float) (kgOliva * RENTABILIDAD_CAMBIO);
    }

    public float CalcularMaquila() {
        return kgOliva * porcentajeMaquila / 100;
    }

    public float CalcularMaquilaReflejar() {
        return kgOliva * RENDIMIENTO_MAQUILA_KG;
    }

    /**
     * Calcula el aceite que puede retirar
     *
     * @return devuelve lo que queda del aceite restando la maquila que se
     * quedan
     */
    public float CalcularLitrosParaRetirar() {      //Calcular maquila
        return CalcularLitrosAceiteParaCambio() - (kgOliva * porcentajeMaquila / 100);
    }

    /**
     * Si se quedan un rendimiento de maquila superior a 0 no se cobra la
     * multuración
     *
     * @return precio de la multuración
     */
    public float CalcularPrecioMulturacion() {
        float precio;

        if (porcentajeMaquila > 0) {
            precio = 0;
        } else {
            precio = kgOliva * RENDIMIENTO_MULTURACION_ECONOMICO;
        }

        return precio;
    }

    /**
     * Calcula el aceite que retira el cliente, si se da el caso
     *
     * @return aceite retirado
     */
    public float CalcularAceiteRealRetirado() {
        if (retira) {
            return CalcularLitrosParaRetirar();
        } else {
            return 0;
        }
    }

}
